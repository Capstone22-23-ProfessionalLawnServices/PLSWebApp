name: Java CI with Maven For Google VM

on:
  push:
    branches: [ "main" ]

jobs:
  build:

    runs-on: windows-latest
    environment: production

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
      - name: Start MySQL service
        run: sc start mysql
      - name: Create MySQL user
        run: mysql -u root -proot -e "CREATE USER 'plsadmin'@'localhost' IDENTIFIED BY 'adminpassword';"
      - name: Grant privileges
        run: mysql -u root -proot -e "GRANT ALL PRIVILEGES ON mydatabase.* TO 'plsadmin'@'localhost';"
      - name: Create database schema
        run: mysql -u plsadmin -padminpassword -e "CREATE DATABASE mydatabase;"
      - name: Check if application.properties exists
        run: |
          if (Test-Path -Path 'src/main/resources/application.properties') {
          echo "application.properties file exists."
          }
          else {
          echo "application.properties file not found."
          exit 1
          }
      - name: Show application.properties content
        run: |
          Get-Content src/main/resources/application.properties
      - name: Replace placeholder values
        run: |
          (Get-Content src/main/resources/application.properties) -replace "\$\{APP_DATASOURCE_JDBC_URL\}", "${{ secrets.APP_DATASOURCE_JDBC_URL }}" | Set-Content src/main/resources/application.properties
          (Get-Content src/main/resources/application.properties) -replace "\$\{APP_DATASOURCE_USERNAME\}", "${{ secrets.APP_DATASOURCE_USERNAME }}" | Set-Content src/main/resources/application.properties
          (Get-Content src/main/resources/application.properties) -replace "\$\{APP_DATASOURCE_PASSWORD\}", "${{ secrets.APP_DATASOURCE_PASSWORD }}" | Set-Content src/main/resources/application.properties
          (Get-Content src/main/resources/application.properties) -replace "\$\{APIKEY_OPENWEATHERAPI\}", "${{ secrets.APIKEY_OPENWEATHERAPI }}" | Set-Content src/main/resources/application.properties
          (Get-Content src/main/resources/application.properties) -replace "\$\{APP_HOME_MISSED_JOB_DAYS\}", "${{ vars.APP_HOME_MISSED_JOB_DAYS }}" | Set-Content src/main/resources/application.properties
          (Get-Content src/main/resources/application.properties) -replace "\$\{SERVER_SERVLET_REGISTER_DEFAULT_SERVLET\}", "${{ vars.SERVER_SERVLET_REGISTER_DEFAULT_SERVLET }}" | Set-Content src/main/resources/application.properties
          (Get-Content src/main/resources/application.properties) -replace "\$\{SPRING_APPLICATION_NAME\}", "${{ vars.SPRING_APPLICATION_NAME }}" | Set-Content src/main/resources/application.properties
          (Get-Content src/main/resources/application.properties) -replace "\$\{SPRING_DATA_WEB_PAGEABLE_DEFAULT_PAGE_SIZE\}", "${{ vars.SPRING_DATA_WEB_PAGEABLE_DEFAULT_PAGE_SIZE }}" | Set-Content src/main/resources/application.properties
          (Get-Content src/main/resources/application.properties) -replace "\$\{SPRING_JPA_HIBERNATE_DDL_AUTO\}", "${{ vars.SPRING_JPA_HIBERNATE_DDL_AUTO }}" | Set-Content src/main/resources/application.properties
          (Get-Content src/main/resources/application.properties) -replace "\$\{SPRING_JPA_OPEN_IN_VIEW\}", "${{ vars.SPRING_JPA_OPEN_IN_VIEW }}" | Set-Content src/main/resources/application.properties
      - name: Show application.properties content
        run: |
          Get-Content src/main/resources/application.properties
      - name: Build with Maven
        run: mvn clean package install
      - name: Rename Artifact
        run: |
          mv target/*.jar target/${{ vars.PROJECT_ARTIFACT_NAME }}.jar
      - name: Upload Artifact for Download
        uses: actions/upload-artifact@v2
        with:
          name: ${{ vars.SPRING_APPLICATION_NAME }}
          path: target/${{ vars.PROJECT_ARTIFACT_NAME }}.jar